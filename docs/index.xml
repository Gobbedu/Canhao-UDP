<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introdução on Relatório Redes II</title><link>https://gobbedu.github.io/Canhao-UDP/</link><description>Recent content in Introdução on Relatório Redes II</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://gobbedu.github.io/Canhao-UDP/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/canh%C3%A3o/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/canh%C3%A3o/</guid><description>Canhão UDP # Descrição # Este trabalho consiste da implementação de um sistema cliente-servidor, onde o sistema irá operar sobre o protocolo de transporte UDP.
Nesta implementação, o cliente irá enviar uma quantidade significativa de dados (&amp;ldquo;canhão&amp;rdquo;) para o servidor. Ao receber os dados, o servidor irá tomar conta e analisar conforme as mensagens chegam, quais pacotes tiveram sua ordem invertida e quantos pacotes nunca chegaram.
Objetivo # O objetivo deste trabalho é poder medir o desempenho da rede, ao medir quantos pacotes tiveram sua ordem de chegada invertida e quantos não chegaram ao final.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/cliente/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/cliente/</guid><description>Cliente UDP # O objetivo do cliente é simples, apenas execute
./cliente &amp;lt;endereço servidor&amp;gt; &amp;lt;porta&amp;gt; &amp;lt;número de pacotes&amp;gt; Para enviar ao servidor na porta &amp;lt;porta&amp;gt; com &amp;lt;número de pacotes&amp;gt; pacotes. Estes pacotes serão enviados em ordem, de 1 a N, Cada pacote é enviado uma vez, e contém em seus dados o número da sequencia enviada e o número de pacotes totais a serem enviados.
Kernel # A parte central de execução deste código é realçado abaixo</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/servidor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/servidor/</guid><description>Servidor UDP # O objetivo do servidor é analisar as mensagens recebidas e imprimir em um log a sequência de eventos que vão ocorrer. Por exemplo, qual sequência chegou em ordem, em qual momento uma mensagem chegou fora da sequência, etc.
O servidor deve ser executado da seguinte maneira:
./servidor &amp;lt;porta&amp;gt; De forma que o socket ficará ouvindo em um loop infinito na porta &amp;lt;porta&amp;gt;. O socket do servidor foi configurado para retornar um erro de timeout a cada 10 segundos, função que nos auxilia a verificar se mensagens do cliente nunca chegaram, para o servidor encerrar esta análise e voltar a ouvir na porta, esperando uma nova leva de mensagens.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/udp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/udp/</guid><description>User Datagram Protocol (UDP) # O Protocolo UDP é um protocolo de comunicação utilizado em toda a internet para transmissões com validade especialmente limitada, tais como reproduções de vídeo ou pesquisas no DNS. Ele acelera as comunicações ao não estabelecer formalmente uma conexão antes que os dados sejam transferidos. Isso permite que os dados sejam transferidos muito rapidamente, mas também pode fazer com que pacotes se percam em trânsito além de criar oportunidades de exploração na forma de ataques DDoS.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/buttons/</guid><description>Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/details/</guid><description>Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} {{&amp;lt; details title=&amp;#34;Title&amp;#34; open=true &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/expand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/expand/</guid><description>Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.
Example # Default # {{&amp;lt; expand &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Expand ↕ Markdown content Lorem markdownum insigne&amp;hellip; With Custom Label # {{&amp;lt; expand &amp;#34;Custom Label&amp;#34; &amp;#34;...&amp;#34; &amp;gt;}} ## Markdown content Lorem markdownum insigne.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt;/* katex [display] [class=&amp;#34;text-center&amp;#34;] */&amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt;/* /katex */&amp;gt;}} Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt;/* mermaid [class=&amp;#34;text-center&amp;#34;]*/&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/hugo-utils/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item></channel></rss>
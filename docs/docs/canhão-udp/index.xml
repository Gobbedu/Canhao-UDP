<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Relatório Redes II</title><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/</link><description>Recent content on Relatório Redes II</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Feb 2023 10:18:19 -0300</lastBuildDate><atom:link href="https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/index.xml" rel="self" type="application/rss+xml"/><item><title>Log</title><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/log/</link><pubDate>Thu, 23 Feb 2023 10:18:19 -0300</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/log/</guid><description>Arquivo Log # O log criado segue os seguintes formatos: Cliente # Após executar egwvg20@h10:Canhao-UDP$ ./cliente h11 2000 100. Apenas indica quando houve o fim da transmissão de disparos, como no exemplo abaixo:
Iniciando envio de mensagens! Serão enviadas 100 mensagens! Todas as mensagens foram enviadas com sucesso! Servidor # Após executar egwvg20@h11:Canhao-UDP$ ./servidor 2000 Fica em loop infinito, até que seja encerrado com Ctrl+C. Só é adicionado uma nova mensagem ao log caso:</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/canh%C3%A3o/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/canh%C3%A3o/</guid><description>Canhão UDP # Descrição # Este trabalho consiste da implementação de um sistema cliente-servidor, onde o sistema irá operar sobre o protocolo de transporte UDP.
Nesta implementação, o cliente irá enviar uma quantidade significativa de dados (&amp;ldquo;canhão&amp;rdquo;) para o servidor. Ao receber os dados, o servidor irá tomar conta e analisar conforme as mensagens chegam, quais pacotes tiveram sua ordem invertida e quantos pacotes nunca chegaram.
Objetivo # O objetivo deste trabalho é poder medir o desempenho da rede, ao medir quantos pacotes tiveram sua ordem de chegada invertida e quantos não chegaram ao final.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/cliente/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/cliente/</guid><description>Cliente UDP # O objetivo do cliente é simples, apenas execute
./cliente &amp;lt;endereço servidor&amp;gt; &amp;lt;porta&amp;gt; &amp;lt;número de pacotes&amp;gt; Para enviar ao servidor na porta &amp;lt;porta&amp;gt; com &amp;lt;número de pacotes&amp;gt; pacotes. Estes pacotes serão enviados em ordem, de 1 a N, Cada pacote é enviado uma vez, e contém em seus dados o número da sequencia enviada e o número de pacotes totais a serem enviados.
Kernel # A parte central de execução deste código é realçado abaixo</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/servidor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/servidor/</guid><description>Servidor UDP # O objetivo do servidor é analisar as mensagens recebidas e imprimir em um log a sequência de eventos que vão ocorrer. Por exemplo, qual sequência chegou em ordem, em qual momento uma mensagem chegou fora da sequência, etc.
O servidor deve ser executado da seguinte maneira:
./servidor &amp;lt;porta&amp;gt; De forma que o socket ficará ouvindo em um loop infinito na porta &amp;lt;porta&amp;gt;. O socket do servidor foi configurado para retornar um erro de timeout a cada 10 segundos, função que nos auxilia a verificar se mensagens do cliente nunca chegaram, para o servidor encerrar esta análise e voltar a ouvir na porta, esperando uma nova leva de mensagens.</description></item><item><title/><link>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/udp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gobbedu.github.io/Canhao-UDP/docs/canh%C3%A3o-udp/udp/</guid><description>User Datagram Protocol (UDP) # O Protocolo UDP é um protocolo de comunicação utilizado em toda a internet para transmissões com validade especialmente limitada, tais como reproduções de vídeo ou pesquisas no DNS. Ele acelera as comunicações ao não estabelecer formalmente uma conexão antes que os dados sejam transferidos. Isso permite que os dados sejam transferidos muito rapidamente, mas também pode fazer com que pacotes se percam em trânsito além de criar oportunidades de exploração na forma de ataques DDoS.</description></item></channel></rss>